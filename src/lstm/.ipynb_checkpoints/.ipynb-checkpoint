{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from collections import defaultdict\n",
    "df_folda = '/Users/sango.m.ab/Desktop/research/script/anaphora/src/lstm/dataframe'\n",
    "domain_dict = {'OC':'Yahoo!知恵袋','OW':'白書','OY':'Yahoo!ブログ',\n",
    "    'PB':'書籍','PM':'雑誌','PN':'新聞'}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_dataset(df_folda):\n",
    "    dataset_dict = {}\n",
    "    for domain in domain_dict:\n",
    "        with open(f'{df_folda}/dataframe_list_{domain}.pickle', 'rb') as f:\n",
    "            df_list = pickle.load(f)\n",
    "        dataset = []\n",
    "        for df in df_list:\n",
    "            y_ga = np.array(df['ga_case'], dtype=np.int32)\n",
    "            y_o = np.array(df['o_case'], dtype=np.int32)\n",
    "            y_ni = np.array(df['ni_case'], dtype=np.int32)\n",
    "            df = df.drop('ga_case', axis=1).drop('o_case', axis=1).drop('ni_case', axis=1).drop('ga_dep_tag', axis=1).drop('o_dep_tag', axis=1).drop('ni_dep_tag', axis=1)\n",
    "            x = np.array(df, dtype=np.float32)\n",
    "            y_ga_index = np.array([y_ga.argmax()], dtype=np.int32)\n",
    "            dataset.append((x, y_ga_index))\n",
    "        dataset_dict[domain] = dataset\n",
    "    return dataset_dict\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('./dataframe/dataframe_list_OC.pickle', 'rb') as f:\n",
    "    df_list = pickle.load(f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "13981"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "count_ga_index = defaultdict(int)\n",
    "count_o_index = defaultdict(int)\n",
    "count_ni_index = defaultdict(int)\n",
    "for df in df_list:\n",
    "    y_ga = np.array(df['ga_case'], dtype=np.int32)\n",
    "    y_o = np.array(df['o_case'], dtype=np.int32)\n",
    "    y_ni = np.array(df['ni_case'], dtype=np.int32)\n",
    "    count_ga_index[y_ga.argmax()] += 1\n",
    "    count_o_index[y_o.argmax()] += 1\n",
    "    count_ni_index[y_ni.argmax()] += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "defaultdict(int,\n",
       "            {0: 10771,\n",
       "             1: 227,\n",
       "             2: 117,\n",
       "             3: 781,\n",
       "             4: 181,\n",
       "             5: 136,\n",
       "             6: 179,\n",
       "             7: 114,\n",
       "             8: 122,\n",
       "             9: 121,\n",
       "             10: 115,\n",
       "             11: 78,\n",
       "             12: 83,\n",
       "             13: 70,\n",
       "             14: 88,\n",
       "             15: 70,\n",
       "             16: 72,\n",
       "             17: 46,\n",
       "             18: 49,\n",
       "             19: 48,\n",
       "             20: 53,\n",
       "             21: 29,\n",
       "             22: 46,\n",
       "             23: 38,\n",
       "             24: 33,\n",
       "             25: 26,\n",
       "             26: 25,\n",
       "             27: 28,\n",
       "             28: 24,\n",
       "             29: 23,\n",
       "             30: 19,\n",
       "             31: 10,\n",
       "             32: 12,\n",
       "             33: 20,\n",
       "             34: 7,\n",
       "             35: 11,\n",
       "             36: 9,\n",
       "             37: 15,\n",
       "             38: 6,\n",
       "             39: 7,\n",
       "             40: 4,\n",
       "             41: 5,\n",
       "             42: 4,\n",
       "             43: 8,\n",
       "             44: 4,\n",
       "             45: 5,\n",
       "             46: 1,\n",
       "             48: 3,\n",
       "             49: 6,\n",
       "             50: 2,\n",
       "             51: 3,\n",
       "             53: 2,\n",
       "             54: 2,\n",
       "             55: 1,\n",
       "             56: 1,\n",
       "             57: 3,\n",
       "             58: 1,\n",
       "             59: 2,\n",
       "             62: 3,\n",
       "             63: 1,\n",
       "             69: 2,\n",
       "             72: 1,\n",
       "             73: 2,\n",
       "             75: 1,\n",
       "             78: 1,\n",
       "             81: 2,\n",
       "             87: 1,\n",
       "             98: 1})"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count_ni_index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method deprecate.<locals>.wrapper of 0     0.0\n",
       "1     1.0\n",
       "2     0.0\n",
       "3     0.0\n",
       "4     0.0\n",
       "5     0.0\n",
       "6     0.0\n",
       "7     0.0\n",
       "8     0.0\n",
       "9     0.0\n",
       "10    0.0\n",
       "11    0.0\n",
       "12    0.0\n",
       "13    0.0\n",
       "14    0.0\n",
       "15    0.0\n",
       "16    0.0\n",
       "17    0.0\n",
       "18    0.0\n",
       "19    0.0\n",
       "20    0.0\n",
       "21    0.0\n",
       "22    0.0\n",
       "23    0.0\n",
       "24    0.0\n",
       "25    0.0\n",
       "26    0.0\n",
       "27    0.0\n",
       "28    0.0\n",
       "29    0.0\n",
       "30    0.0\n",
       "31    0.0\n",
       "Name: ga_case, dtype: float64>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
